{"version":3,"sources":["components/persons.js","components/personForm.js","components/Notification.js","components/filter.js","services/contacts.js","App.js","index.js"],"names":["Contact","person","deleteContact","name","number","onClick","Persons","persons","contactService","setPersons","contact","window","confirm","console","log","id","remove","then","deletionResponse","personsUpdate","filter","map","PersonForm","notify","useState","form","setForm","handleFormChange","event","value","target","useEffect","onSubmit","preventDefault","includes","toBeUpdated","find","update","updateResponse","catch","error","create","returnedContact","concat","addContact","onChange","type","Notification","notification","className","message","Filter","filterValue","handleFilterChange","baseURL","getAll","axios","get","response","data","post","put","delete","App","setFitlerValue","setNotification","returnedContacts","filteredPersons","toLowerCase","setTimeout","notifcation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e741a5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Contact = ({ person, deleteContact }) => {\n    return (\n      <li>\n        {person.name} {person.number}\n        <button onClick={()=>deleteContact(person)}>Delete</button>\n      </li>\n    );\n  };\n\n  const Persons = ({ persons, contactService, setPersons}) => {\n\n    const deleteContact = (contact) => {\n      if (window.confirm(`Delete ${contact.name}? `)) {\n        console.log(`deleting note id: ${contact.id}`);\n        contactService.remove(contact.id).then((deletionResponse) => {\n          const personsUpdate = persons.filter(\n            (person) => person.id !== contact.id\n          );\n          setPersons(personsUpdate);\n        });\n      }\n    };\n\n    return (\n      <div>\n        <ul>\n          {persons.map((person) => (\n            <Contact key={person.name} person={person} deleteContact={deleteContact}/>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n\nexport default Persons;","import React, {useState, useEffect} from \"react\";\n\nconst PersonForm = ({\n    persons,\n    setPersons,\n    contactService,\n    notify\n\n  }) => {\n\n    const [form, setForm] = useState({ name: null, number: null });\n\n    const addContact = () => {\n      const contact = {\n        name: form.name,\n        number: form.number,\n      };\n      contactService.create(contact).then((returnedContact) => {\n        setPersons(persons.concat(returnedContact));\n        notify(`${contact.name} has been added`);\n      });\n    };\n\n    const updateContact = (contact, id) => {\n      if (\n        window.confirm(\n          `${form.name} is already added to phonebook replace the old number with a new one?`\n        )\n      ) {\n        contactService\n          .update(contact, id)\n          .then((updateResponse) => {\n            const personsUpdate = persons.map((person) =>\n              person.id !== updateResponse.id ? person : updateResponse\n            );\n            setPersons(personsUpdate);\n            notify(`${contact.name} has been updated`);\n          })\n          .catch((error) => {\n            setPersons(persons.filter((person) => person.id !== id));\n            notify(`Contact '${contact.name}' was already removed from server`, 'error');\n          });\n      }\n    };\n\n    const handleFormChange = (event) => {\n      const value = event.target.value;\n      const name = event.target.name;\n      setForm({ ...form, [name]: value});\n    };\n\n    const handleFormSubmit = (event) =>{\n      event.preventDefault();\n      const names = persons.map((person) => person.name);\n      if (names.includes(form.name)) {\n        const toBeUpdated = persons.find((person) => person.name === form.name);\n        toBeUpdated.number = form.number;\n        updateContact(toBeUpdated, toBeUpdated.id);\n      } else {\n        addContact();\n      }\n    }\n\n    useEffect(() => {\n      setForm({ name: '', number: '' });\n    }, [persons])\n\n\n    return (\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          Name: <input name='name' value={form.name} onChange={handleFormChange} />\n        </div>\n        <div>\n          Number: <input name='number' value={form.number} onChange={handleFormChange} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    );\n  };\n\n  export default PersonForm;","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return <div className={notification.type}>{notification.message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Filter = ({ filterValue, handleFilterChange }) => {\n    return (\n      <div>\n        Filter <input value={filterValue} onChange={handleFilterChange} />\n      </div>\n    );\n  };\n\nexport default Filter;","import axios from 'axios';\nconst baseURL = '/api/persons'\n\n\nconst getAll = () =>{\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = (contact) =>{\n    const request = axios.post(baseURL,contact);\n    return request.then(response => response.data);\n}\n\nconst update = (contact, id) =>{\n    const request = axios.put( `${baseURL}/${id}` , contact)\n    return request.then(response => response.data);\n}\n\nconst remove = (id) =>{\n    const request = axios.delete( `${baseURL}/${id}`)\n    return request.then(response => response.data);\n}\n\nconst contactService = {\n    getAll,\n    create,\n    update,\n    remove\n}\n\nexport default contactService;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Persons from './components/persons';\nimport PersonForm from './components/personForm';\nimport Notification from './components/Notification';\nimport Filter from './components/filter';\nimport contactService from './services/contacts';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterValue, setFitlerValue] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  const hook = () => {\n    contactService.getAll().then((returnedContacts) => {\n      setPersons(returnedContacts);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const handleFilterChange = (event) => {\n    setFitlerValue(event.target.value);\n  };\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  const notify = (message, type='success') => {\n    setNotification({message, type});\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter\n        filterValue={filterValue}\n        handleFilterChange={handleFilterChange}\n      />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        notify={notify}\n        notifcation={notification}\n        contactService={contactService}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        persons={filteredPersons}\n        contactService={contactService}\n        setPersons={setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}